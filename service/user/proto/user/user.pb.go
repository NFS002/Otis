// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/user/proto/user/user.proto

package user

import (
	proto1 "gitlab.com/otis_team/backend/dtypes/user/proto"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserQuery struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserQuery) Reset()         { *m = UserQuery{} }
func (m *UserQuery) String() string { return proto.CompactTextString(m) }
func (*UserQuery) ProtoMessage()    {}
func (*UserQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_948f2ef06de951ef, []int{0}
}

func (m *UserQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserQuery.Unmarshal(m, b)
}
func (m *UserQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserQuery.Marshal(b, m, deterministic)
}
func (m *UserQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserQuery.Merge(m, src)
}
func (m *UserQuery) XXX_Size() int {
	return xxx_messageInfo_UserQuery.Size(m)
}
func (m *UserQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_UserQuery.DiscardUnknown(m)
}

var xxx_messageInfo_UserQuery proto.InternalMessageInfo

func (m *UserQuery) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type UsersResponse struct {
	Executed             bool           `protobuf:"varint,1,opt,name=executed,proto3" json:"executed,omitempty"`
	Users                []*proto1.User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UsersResponse) Reset()         { *m = UsersResponse{} }
func (m *UsersResponse) String() string { return proto.CompactTextString(m) }
func (*UsersResponse) ProtoMessage()    {}
func (*UsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_948f2ef06de951ef, []int{1}
}

func (m *UsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersResponse.Unmarshal(m, b)
}
func (m *UsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersResponse.Marshal(b, m, deterministic)
}
func (m *UsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersResponse.Merge(m, src)
}
func (m *UsersResponse) XXX_Size() int {
	return xxx_messageInfo_UsersResponse.Size(m)
}
func (m *UsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UsersResponse proto.InternalMessageInfo

func (m *UsersResponse) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

func (m *UsersResponse) GetUsers() []*proto1.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*UserQuery)(nil), "user.UserQuery")
	proto.RegisterType((*UsersResponse)(nil), "user.UsersResponse")
}

func init() {
	proto.RegisterFile("service/user/proto/user/user.proto", fileDescriptor_948f2ef06de951ef)
}

var fileDescriptor_948f2ef06de951ef = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2a, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2f, 0x2d, 0x4e, 0x2d, 0xd2, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x87, 0x30,
	0x41, 0x84, 0x1e, 0x98, 0x2f, 0xc4, 0x02, 0x62, 0x4b, 0xc9, 0xa4, 0x94, 0x54, 0x16, 0xa4, 0x16,
	0xa3, 0x2b, 0x84, 0xa8, 0x51, 0x52, 0xe6, 0xe2, 0x0c, 0x2d, 0x4e, 0x2d, 0x0a, 0x2c, 0x4d, 0x2d,
	0xaa, 0x14, 0x12, 0xe3, 0x62, 0x03, 0x49, 0x79, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0x41, 0x79, 0x4a, 0xbe, 0x5c, 0xbc, 0x20, 0x45, 0xc5, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x42, 0x52, 0x5c, 0x1c, 0xa9, 0x15, 0xa9, 0xc9, 0xa5, 0x25, 0xa9, 0x29, 0x60, 0xa5, 0x1c,
	0x41, 0x70, 0xbe, 0x90, 0x02, 0x17, 0x2b, 0x48, 0x5b, 0xb1, 0x04, 0x93, 0x02, 0xb3, 0x06, 0xb7,
	0x11, 0x97, 0x1e, 0xd8, 0x36, 0x90, 0xfe, 0x20, 0x88, 0x84, 0xd1, 0x72, 0x46, 0x2e, 0x6e, 0x10,
	0x3f, 0x18, 0xe2, 0x05, 0x21, 0x7d, 0x2e, 0x2e, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0x54, 0x90, 0xa0,
	0x10, 0x92, 0x06, 0x29, 0x61, 0x04, 0x1b, 0x6e, 0xb9, 0x12, 0x83, 0x90, 0x21, 0x17, 0xbb, 0x7b,
	0x6a, 0x09, 0x58, 0x35, 0x3f, 0x42, 0x05, 0xd8, 0x0f, 0xb8, 0xb4, 0x98, 0x70, 0x71, 0xb9, 0xa4,
	0xe6, 0xa4, 0x42, 0xed, 0x20, 0x52, 0x57, 0x12, 0x1b, 0x38, 0x90, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xff, 0xf3, 0x92, 0x92, 0x6e, 0x01, 0x00, 0x00,
}
