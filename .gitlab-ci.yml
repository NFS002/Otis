image: golang:latest

variables:
    REPO_NAME: gitlab.com/otis-team/backend

stages:
  - test
  - build
  - deploy

lint:
  stage: test
  before_script:
    - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
    - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
    - cd $GOPATH/src/$REPO_NAME
    - go get -u golang.org/x/lint/golint
  script:
    - golint -set_exit_status ./...

container_build:
    stage: build
    except:
     - master
    image: docker:stable
    services:
     - docker:dind
    script: 
     - docker build -t registry.gitlab.com/otis-team/backend/service/merchant:latest ./service/merchant/
     - docker build -t registry.gitlab.com/otis-team/backend/service/user:latest ./service/user/
     - docker build -t registry.gitlab.com/otis-team/backend/service/transaction:latest ./service/transaction/
     - docker build -t registry.gitlab.com/otis-team/backend/api/merchant:latest --build-arg gitlab_user=$CI_REGISTRY_USER --build-arg gitlab_token=$CI_REGISTRY_PASSWORD ./api/merchant/
     - docker build -t registry.gitlab.com/otis-team/backend/api/user:latest --build-arg gitlab_user=$CI_REGISTRY_USER --build-arg gitlab_token=$CI_REGISTRY_PASSWORD ./api/user/

container_registry:
    stage: build
    only:
     - master
    image: docker:stable
    services:
     - docker:dind
    script: 
     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
     - docker build -t registry.gitlab.com/otis-team/backend/service/merchant:latest ./service/merchant/
     - docker push registry.gitlab.com/otis-team/backend/service/merchant:latest
     - docker build -t registry.gitlab.com/otis-team/backend/service/user:latest ./service/user/
     - docker push registry.gitlab.com/otis-team/backend/service/user:latest
     - docker build -t registry.gitlab.com/otis-team/backend/service/transaction:latest ./service/transaction/
     - docker push registry.gitlab.com/otis-team/backend/service/transaction:latest
     - docker build -t registry.gitlab.com/otis-team/backend/api/merchant:latest --build-arg gitlab_user=$CI_REGISTRY_USER --build-arg gitlab_token=$CI_REGISTRY_PASSWORD ./api/merchant/
     - docker push registry.gitlab.com/otis-team/backend/api/merchant:latest
     - docker build -t registry.gitlab.com/otis-team/backend/api/user:latest --build-arg gitlab_user=$CI_REGISTRY_USER --build-arg gitlab_token=$CI_REGISTRY_PASSWORD ./api/user/
     - docker push registry.gitlab.com/otis-team/backend/api/user:latest

deploy:
    stage: deploy
    image: dtzar/helm-kubectl
    script:
     - kubectl config set-cluster k8s --server="${SERVER}"
     - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
     - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
     - kubectl config set-context default --cluster=k8s --user=gitlab
     - kubectl config use-context default
     - kubectl apply -f service/merchant/deployment.yaml
     
